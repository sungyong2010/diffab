#!/bin/bash
#Author	: shaun.hong@lge.com
#Date	: 2012-02-14
#Program: diffab
#Object	: valentine present

# Parameter Description
# $1 : before commit, tag, branch
# $2 : after commit, tag, branch

# [Usage]
#$diffab tag1 tag2
#$diffab branch1 branch2
#$diffab commit1
#$diffab commit1 commit2

# History
# 2012/06/27	shaun.hong@lge.com	:+ add color table
# 									 + tag, commit, branch
# 2014/03/04	shaun.hong@lge.com  :+ Fixed related string for branch name

##=============================================================================================
## Color Define
## --------------------------------------------------------------------------------------------
red='\e[0;31m';     RED='\e[1;31m';     green='\e[0;32m';       GREEN='\e[1;32m';
yellow='\e[0;33m';  YELLOW='\e[1;33m';  blue='\e[0;34m';        BLUE='\e[1;34m';
cyan='\e[0;36m';    CYAN='\e[1;36m';
NCOL='\e[0m';
export red RED green GREEN yellow YELLOW blue BLUE cyan CYAN NCOL

#current directory
CWD=$(pwd)

function diffab()
{
	#backup current branch to restore
	CURRENT_BRANCH=`git status | grep 'On branch' | cut -f4 -d" "`
	echo "Current Branch is" ${CURRENT_BRANCH}

	#check commit b,a and make temp a,b branch
	if [ -z $1 ]; then
		echo -e ${RED}"You must have one commit at least!"${NCOL}
		return 1		
	fi	
	
	if [ -z $2 ]; then
		a_commit=$1	
		b_commit=$1^		
	else
		a_commit=$2
		b_commit=$1
	fi
	
	echo -e ${YELLOW}before baseline : $b_commit ${NCOL}
	echo -e ${YELLOW}after  baseline : $a_commit ${NCOL}
	check1=`git branch before $b_commit 2>&1 | cut -f2 -d" "`
	if [ "$check1" = "Not" ]; then
		echo -e ${RED}"You may have wrong commit, please check again!"${NCOL}
		return 1
	fi
	check2=`git branch after $a_commit 2>&1 | cut -f2 -d" "`
	if [ "$check2" = "Not" ]; then
		echo -e ${RED}"You may have wrong commit, please check again!"${NCOL}
		return 1
	fi

	#backup directory
	#diff=$CWD/../diff
	diff=${HOME}/diff
	echo diff path: $diff
	if [ -e $diff ]; then
		echo -e ${BLUE}"Already exist diff directory in your parent path."${NCOL}
		echo -e ${BLUE}"Deleting diff directory..."${NCOL}
		rm -rf $diff
	fi
	mkdir $diff

	#make diff file
	#make after file
	echo -e ${BLUE}"Patch file list..."
	git diff --pretty=format:"%n" --name-only before after 2>&1 | tee $diff/diff.list
	echo -e ${CYAN}${NCOL}

	#find .git directory for packing patch to keep directory structures
	local git_root="."
	while [ ! -d "${git_root}/.git" ];do git_root="../${git_root}"; done

	#packing
	cd ${git_root}
	echo -e ${CYAN}"Generating before, after zip file..."
	git checkout -f after 
	cat $diff/diff.list | xargs zip $diff/after.zip
	git checkout -f before
	cat $diff/diff.list | xargs zip $diff/before.zip
	echo -e ${CYAN}${NCOL}
	cd -

	#delete temp branch
	git checkout --force ${CURRENT_BRANCH}
	git branch -D before
	git branch -D after

	#make readme.txt
	README=$diff/readme.txt

	echo "[Diff path(git project)]" > $README
	echo "-------------------------------------------------------" >> $README
	git config --list | grep projectname | cut -f 3 -d. >> $README
	echo "" >> $README 
	echo "" >> $README 
	echo "[Diff file list]" >> $README
	echo "-------------------------------------------------------" >> $README
	todos $diff/diff.list
	cat $diff/diff.list >> $README
	rm -rf $diff/diff.list
	echo "" >> $README 
	echo "" >> $README 
	echo "[Diff info]" >> $README
	echo "-------------------------------------------------------" >> $README
	git log --pretty=short ${b_commit}..${a_commit} >> $README
	echo "" >> $README 
	echo "" >> $README 
	echo "[Diff contents(patch)]" >> $README
	echo "-------------------------------------------------------" >> $README
	echo "Please see the diff.patch file" >> $README
	git diff ${b_commit} ${a_commit} > $diff/diff.patch

	#convert DOS style(for windows env)
	todos $README

	#thank you
	echo "Thank you for using diffab!!"
}


function help()
{
	echo "USAGE :"
	echo "	\$diffab tag1 tag2"
	echo "	\$diffab branch1 branch2"
	echo "	\$diffab commit1"
	echo "	\$diffab commit1 commit2"
	exit 0
}

function main()
{
	if [ "$1" = "--help" ]; then
		help
	fi

	if [ -z "$1" ]; then
		help
	else
		if ! diffab $1 $2; then
			echo "Please retry!"
		fi	
	fi
}

main $1 $2
